{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/login": {
            "post": {
                "description": "Generates a JWT token for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token successfully generated",
                        "schema": {
                            "$ref": "#/definitions/swagger.LoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON payload",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponseInvalidJSON"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponseInvalidCredentials"
                        }
                    }
                }
            }
        },
        "/v1/task": {
            "get": {
                "description": "Retrieve a list of tasks. Accessible to managers or the task owner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get tasks list",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No tasks found",
                        "schema": {
                            "$ref": "#/definitions/swagger.NoTasksResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Error fetching tasks",
                        "schema": {
                            "$ref": "#/definitions/swagger.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task with a summary and performed date. Accessible to authenticated users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Task creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateTaskSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Error encrypting summary or creating task",
                        "schema": {
                            "$ref": "#/definitions/swagger.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/task/{id}": {
            "get": {
                "description": "Retrieve task details by ID. Accessible to the task owner or managers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.TaskResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - You do not have permission to view this task",
                        "schema": {
                            "$ref": "#/definitions/swagger.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Error decrypting task summary",
                        "schema": {
                            "$ref": "#/definitions/swagger.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing task. Accessible only to the task owner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated task data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagger.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.UpdateTaskSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - You do not have permission to update this task",
                        "schema": {
                            "$ref": "#/definitions/swagger.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Error encrypting summary",
                        "schema": {
                            "$ref": "#/definitions/swagger.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing task. Accessible only to the task owner or managers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Delete task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.DeleteTaskSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - You do not have permission to delete this task",
                        "schema": {
                            "$ref": "#/definitions/swagger.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.NoTasksResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Error deleting task",
                        "schema": {
                            "$ref": "#/definitions/swagger.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "post": {
                "description": "Creates a new user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateUserSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/swagger.EmailErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or email already exists",
                        "schema": {
                            "$ref": "#/definitions/swagger.EmailErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/{id}": {
            "get": {
                "description": "Retrieve user details by ID. Only accessible to managers or the user themselves.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/swagger.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - You do not have permission to view this user",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserNotFoundResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "domain.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "swagger.CreateTaskRequest": {
            "description": "Structure for creating a new task related to a working day.",
            "type": "object",
            "required": [
                "performed_date",
                "summary",
                "task"
            ],
            "properties": {
                "performed_date": {
                    "type": "string",
                    "example": "2024-12-18T09:00:00Z"
                },
                "summary": {
                    "type": "string",
                    "example": "Implement the user authentication module with JWT and ensure it is tested"
                },
                "task": {
                    "type": "string",
                    "example": "Develop new feature for project X"
                }
            }
        },
        "swagger.CreateTaskSuccessResponse": {
            "description": "Successful creation of a task.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Task created successfully"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "swagger.CreateUserSuccessResponse": {
            "description": "Response for successfully creating a user.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User created successfully"
                },
                "status": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "swagger.DeleteTaskSuccessResponse": {
            "description": "Success message when a task is deleted successfully.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Task deleted successfully"
                }
            }
        },
        "swagger.EmailErrorResponse": {
            "description": "Generic error message format.",
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Invalid data format"
                },
                "error": {
                    "type": "string",
                    "example": "A user with this email already exists"
                }
            }
        },
        "swagger.ErrorResponse": {
            "description": "Generic error response.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "swagger.ErrorResponseInvalidCredentials": {
            "description": "Invalid credentials provided.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "swagger.ErrorResponseInvalidJSON": {
            "description": "Invalid JSON payload.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid JSON payload"
                }
            }
        },
        "swagger.ForbiddenResponse": {
            "description": "The user does not have permission to access the requested resource.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Forbidden - You do not have permission to view this task"
                }
            }
        },
        "swagger.GetTasksSuccessResponse": {
            "description": "Success response for retrieving tasks.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Tasks retrieved successfully"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.TaskResponse"
                    }
                }
            }
        },
        "swagger.InternalServerErrorResponse": {
            "description": "An internal error occurred during task processing.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal server error - Error decrypting task summary"
                }
            }
        },
        "swagger.LoginSuccessResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                }
            }
        },
        "swagger.NoTasksResponse": {
            "description": "Response when no tasks are found.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "No tasks found"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/swagger.TaskResponse"
                    }
                }
            }
        },
        "swagger.NotFoundResponse": {
            "description": "The requested resource was not found.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Task not found"
                }
            }
        },
        "swagger.TaskResponse": {
            "description": "Task details returned from the API.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-12-15T20:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "performed_date": {
                    "type": "string",
                    "example": "2024-12-15T19:14:00Z"
                },
                "summary": {
                    "type": "string",
                    "example": "Finalize all pending tasks"
                },
                "task": {
                    "type": "string",
                    "example": "Complete project documentation"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-12-15T21:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "swagger.UnauthorizedResponse": {
            "description": "Missing or invalid token.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized - Missing or invalid token"
                }
            }
        },
        "swagger.UpdateTaskRequest": {
            "description": "Structure for updating an existing task.",
            "type": "object",
            "required": [
                "performed_date",
                "summary",
                "task"
            ],
            "properties": {
                "performed_date": {
                    "type": "string",
                    "example": "2024-12-18T15:30:00Z"
                },
                "summary": {
                    "type": "string",
                    "example": "Add detailed explanations to the API documentation"
                },
                "task": {
                    "type": "string",
                    "example": "Update project documentation"
                }
            }
        },
        "swagger.UpdateTaskSuccessResponse": {
            "description": "Success message when a task is updated successfully.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Task updated successfully"
                }
            }
        },
        "swagger.UserErrorResponse": {
            "description": "Generic error message format.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "you do not have permission to view this user"
                }
            }
        },
        "swagger.UserNotFoundResponse": {
            "description": "Generic error message format.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "User not found"
                }
            }
        },
        "swagger.UserResponse": {
            "description": "Response structure for retrieving a user.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-12-15T19:14:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role_id": {
                    "type": "integer",
                    "example": 2
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-12-16T10:00:00Z"
                }
            }
        }
    }
}