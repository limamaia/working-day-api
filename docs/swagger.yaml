definitions:
  domain.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
      role_id:
        type: integer
    required:
    - email
    - name
    - password
    - role_id
    type: object
  domain.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  swagger.CreateTaskRequest:
    description: Structure for creating a new task related to a working day.
    properties:
      performed_date:
        example: "2024-12-18T09:00:00Z"
        type: string
      summary:
        example: Implement the user authentication module with JWT and ensure it is
          tested
        type: string
      task:
        example: Develop new feature for project X
        type: string
    required:
    - performed_date
    - summary
    - task
    type: object
  swagger.CreateTaskSuccessResponse:
    description: Successful creation of a task.
    properties:
      message:
        example: Task created successfully
        type: string
      status:
        example: 201
        type: integer
    type: object
  swagger.CreateUserSuccessResponse:
    description: Response for successfully creating a user.
    properties:
      message:
        example: User created successfully
        type: string
      status:
        example: 201
        type: integer
    type: object
  swagger.DeleteTaskSuccessResponse:
    description: Success message when a task is deleted successfully.
    properties:
      message:
        example: Task deleted successfully
        type: string
    type: object
  swagger.EmailErrorResponse:
    description: Generic error message format.
    properties:
      details:
        example: Invalid data format
        type: string
      error:
        example: A user with this email already exists
        type: string
    type: object
  swagger.ErrorResponse:
    description: Generic error response.
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  swagger.ErrorResponseInvalidCredentials:
    description: Invalid credentials provided.
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  swagger.ErrorResponseInvalidJSON:
    description: Invalid JSON payload.
    properties:
      error:
        example: Invalid JSON payload
        type: string
    type: object
  swagger.ForbiddenResponse:
    description: The user does not have permission to access the requested resource.
    properties:
      error:
        example: Forbidden - You do not have permission to view this task
        type: string
    type: object
  swagger.GetTasksSuccessResponse:
    description: Success response for retrieving tasks.
    properties:
      message:
        example: Tasks retrieved successfully
        type: string
      tasks:
        items:
          $ref: '#/definitions/swagger.TaskResponse'
        type: array
    type: object
  swagger.InternalServerErrorResponse:
    description: An internal error occurred during task processing.
    properties:
      error:
        example: Internal server error - Error decrypting task summary
        type: string
    type: object
  swagger.LoginSuccessResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
    type: object
  swagger.NoTasksResponse:
    description: Response when no tasks are found.
    properties:
      message:
        example: No tasks found
        type: string
      tasks:
        items:
          $ref: '#/definitions/swagger.TaskResponse'
        type: array
    type: object
  swagger.NotFoundResponse:
    description: The requested resource was not found.
    properties:
      error:
        example: Task not found
        type: string
    type: object
  swagger.TaskResponse:
    description: Task details returned from the API.
    properties:
      created_at:
        example: "2024-12-15T20:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      performed_date:
        example: "2024-12-15T19:14:00Z"
        type: string
      summary:
        example: Finalize all pending tasks
        type: string
      task:
        example: Complete project documentation
        type: string
      updated_at:
        example: "2024-12-15T21:00:00Z"
        type: string
      user_id:
        example: 2
        type: integer
    type: object
  swagger.UnauthorizedResponse:
    description: Missing or invalid token.
    properties:
      error:
        example: Unauthorized - Missing or invalid token
        type: string
    type: object
  swagger.UpdateTaskRequest:
    description: Structure for updating an existing task.
    properties:
      performed_date:
        example: "2024-12-18T15:30:00Z"
        type: string
      summary:
        example: Add detailed explanations to the API documentation
        type: string
      task:
        example: Update project documentation
        type: string
    required:
    - performed_date
    - summary
    - task
    type: object
  swagger.UpdateTaskSuccessResponse:
    description: Success message when a task is updated successfully.
    properties:
      message:
        example: Task updated successfully
        type: string
    type: object
  swagger.UserErrorResponse:
    description: Generic error message format.
    properties:
      error:
        example: you do not have permission to view this user
        type: string
    type: object
  swagger.UserNotFoundResponse:
    description: Generic error message format.
    properties:
      error:
        example: User not found
        type: string
    type: object
  swagger.UserResponse:
    description: Response structure for retrieving a user.
    properties:
      created_at:
        example: "2024-12-15T19:14:00Z"
        type: string
      email:
        example: john.doe@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
      role_id:
        example: 2
        type: integer
      updated_at:
        example: "2024-12-16T10:00:00Z"
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/login:
    post:
      consumes:
      - application/json
      description: Generates a JWT token for the authenticated user
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Token successfully generated
          schema:
            $ref: '#/definitions/swagger.LoginSuccessResponse'
        "400":
          description: Invalid JSON payload
          schema:
            $ref: '#/definitions/swagger.ErrorResponseInvalidJSON'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorResponseInvalidCredentials'
      summary: User login
      tags:
      - Auth
  /v1/task:
    get:
      consumes:
      - application/json
      description: Retrieve a list of tasks. Accessible to managers or the task owner.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No tasks found
          schema:
            $ref: '#/definitions/swagger.NoTasksResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.UnauthorizedResponse'
        "500":
          description: Internal server error - Error fetching tasks
          schema:
            $ref: '#/definitions/swagger.InternalServerErrorResponse'
      summary: Get tasks list
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: Create a new task with a summary and performed date. Accessible
        to authenticated users.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task creation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/swagger.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Task created successfully
          schema:
            $ref: '#/definitions/swagger.CreateTaskSuccessResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.UnauthorizedResponse'
        "500":
          description: Internal server error - Error encrypting summary or creating
            task
          schema:
            $ref: '#/definitions/swagger.InternalServerErrorResponse'
      summary: Create a new task
      tags:
      - Task
  /v1/task/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing task. Accessible only to the task owner or
        managers.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
          schema:
            $ref: '#/definitions/swagger.DeleteTaskSuccessResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.UnauthorizedResponse'
        "403":
          description: Forbidden - You do not have permission to delete this task
          schema:
            $ref: '#/definitions/swagger.ForbiddenResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/swagger.NoTasksResponse'
        "500":
          description: Internal server error - Error deleting task
          schema:
            $ref: '#/definitions/swagger.InternalServerErrorResponse'
      summary: Delete task by ID
      tags:
      - Task
    get:
      consumes:
      - application/json
      description: Retrieve task details by ID. Accessible to the task owner or managers.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task details retrieved successfully
          schema:
            $ref: '#/definitions/swagger.TaskResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.UnauthorizedResponse'
        "403":
          description: Forbidden - You do not have permission to view this task
          schema:
            $ref: '#/definitions/swagger.ForbiddenResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/swagger.NotFoundResponse'
        "500":
          description: Internal server error - Error decrypting task summary
          schema:
            $ref: '#/definitions/swagger.InternalServerErrorResponse'
      summary: Get task by ID
      tags:
      - Task
    put:
      consumes:
      - application/json
      description: Update the details of an existing task. Accessible only to the
        task owner.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated task data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/swagger.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Task updated successfully
          schema:
            $ref: '#/definitions/swagger.UpdateTaskSuccessResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.UnauthorizedResponse'
        "403":
          description: Forbidden - You do not have permission to update this task
          schema:
            $ref: '#/definitions/swagger.ForbiddenResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/swagger.NotFoundResponse'
        "500":
          description: Internal server error - Error encrypting summary
          schema:
            $ref: '#/definitions/swagger.InternalServerErrorResponse'
      summary: Update task by ID
      tags:
      - Task
  /v1/user:
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided details.
      parameters:
      - description: User creation payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/swagger.CreateUserSuccessResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/swagger.EmailErrorResponse'
        "500":
          description: Internal server error or email already exists
          schema:
            $ref: '#/definitions/swagger.EmailErrorResponse'
      summary: Create a new user
      tags:
      - User
  /v1/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve user details by ID. Only accessible to managers or the
        user themselves.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details retrieved successfully
          schema:
            $ref: '#/definitions/swagger.UserResponse'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "403":
          description: Forbidden - You do not have permission to view this user
          schema:
            $ref: '#/definitions/swagger.UserErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/swagger.UserNotFoundResponse'
      summary: Get user by ID
      tags:
      - User
swagger: "2.0"
